{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dhc-study\\\\react\\\\LearnReactNative-main\\\\task-manager-app\\\\App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TaskItem from \"./components/TaskItem\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputTask = _useState2[0],\n      setInputTask = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tasks = _useState4[0],\n      setTasks = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalVisible = _useState6[0],\n      setModalVisible = _useState6[1];\n\n  var handleDeleteTask = function handleDeleteTask(itemIndex) {\n    console.log('index', itemIndex);\n    setTasks(function (prevTask) {\n      return prevTask.filter(function (item, index) {\n        return index !== itemIndex;\n      });\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(Pressable, {\n    style: [styles.button, styles.buttonOpen],\n    onPress: function onPress() {\n      setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"\\u30BF\\u30B9\\u30AF\\u3092\\u5165\\u529B\")), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert('Modal has been closed.');\n      setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: 'タスクを入力してください',\n    onChangeText: function onChangeText(text) {\n      setInputTask(text);\n    },\n    value: inputTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.buttonLayout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(Pressable, {\n    style: [styles.button, styles.buttonOpen],\n    onPress: function onPress() {\n      setModalVisible(false);\n      setTasks(function (prevTask) {\n        return [].concat(_toConsumableArray(prevTask), [inputTask]);\n      });\n      setInputTask('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"ok\")), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    onPress: function onPress() {\n      return setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"cancel\")))))), React.createElement(FlatList, {\n    style: styles.list,\n    keyExtractor: function keyExtractor(_item, index) {\n      return index.toString();\n    },\n    data: tasks,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return React.createElement(TaskItem, {\n        title: item,\n        onDeleteTask: handleDeleteTask,\n        index: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center'\n  },\n  textInput: {\n    width: '80%',\n    borderWidth: 1,\n    borderColor: 'blue',\n    padding: 10,\n    borderRadius: 5\n  },\n  list: {\n    flex: 1,\n    width: '100%',\n    marginTop: 24\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/dhc-study/react/LearnReactNative-main/task-manager-app/App.js"],"names":["React","useState","TaskItem","App","inputTask","setInputTask","tasks","setTasks","modalVisible","setModalVisible","handleDeleteTask","itemIndex","console","log","prevTask","filter","item","index","styles","centeredView","button","buttonOpen","textStyle","Alert","alert","modalView","textInput","text","buttonLayout","buttonClose","list","_item","toString","StyleSheet","create","container","flex","backgroundColor","alignItems","width","borderWidth","borderColor","padding","borderRadius","marginTop","justifyContent","margin","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","color","fontWeight","textAlign","modalText","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  StyleSheet,\n  Modal,\n  SafeAreaView,\n  TextInput,\n  Pressable,\n  Text,\n  FlatList,\n  View,\n} from 'react-native';\n\nimport TaskItem from './components/TaskItem';\n\n\nexport default function App() {\n  const [inputTask, setInputTask] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [modalVisible, setModalVisible] = useState(false);\n\n  const handleDeleteTask = (itemIndex) => {\n    console.log('index', itemIndex);\n    setTasks((prevTask) =>\n      prevTask.filter((item, index) => index !== itemIndex),\n    );\n  };\n\n  return (\n    <View style={styles.centeredView}>\n      <Pressable\n        style={[styles.button, styles.buttonOpen]}\n        onPress={() => {\n          setModalVisible(true);\n        }}>\n        <Text style={styles.textStyle}>タスクを入力</Text>\n      </Pressable>\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          Alert.alert('Modal has been closed.');\n          setModalVisible(!modalVisible);\n        }}>\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            <TextInput\n              style={styles.textInput}\n              placeholder={'タスクを入力してください'}\n              onChangeText={(text) => {\n                setInputTask(text);\n              }}\n              value={inputTask}\n            />\n            <View style={styles.buttonLayout}>\n              <Pressable\n                style={[styles.button, styles.buttonOpen]}\n                onPress={() => {\n                  setModalVisible(false);\n                  setTasks((prevTask) => [...prevTask, inputTask]);\n                  setInputTask('')\n                }}>\n                <Text style={styles.textStyle}>ok</Text>\n              </Pressable>\n\n              <Pressable\n                style={[styles.button, styles.buttonClose]}\n                onPress={() => setModalVisible(!modalVisible)}>\n                <Text style={styles.textStyle}>cancel</Text>\n              </Pressable>\n            </View>\n          </View>\n        </View>\n      </Modal>\n      <FlatList\n        style={styles.list}\n        keyExtractor={(_item, index) => index.toString()}\n        data={tasks}\n        renderItem={({ item, index }) => (\n          <TaskItem\n            title={item}\n            onDeleteTask={handleDeleteTask}\n            index={index}\n          />\n        )}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n  },\n  textInput: {\n    width: '80%',\n    borderWidth: 1,\n    borderColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n  },\n  list: { flex: 1, width: '100%', marginTop: 24 },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\",\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\",\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}